@model appCine.Models.pelicula
@{
    ViewBag.Title = "Edit";
    <script type="text/javascript">
        function OnChangeEvent(element) {
            var reader = new FileReader();
            reader.readAsDataURL(element.files[0]);
            reader.onload = function () {
                console.log(reader.result);
                $("#imagenBase64").val(reader.result);
                $("#imagenModel").val(reader.result);
                console.log("BASE 64 " + reader.result);
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };
        }
    </script>
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Peliculas", new { Id = Model.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Pelicula</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.genero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="genero">
                <option value="">Seleccione una categoria</option>
                <option value="1">Accion</option>
                <option value="2">Comedia</option>
                <option value="3">Ciencia ficcion</option>
                <option value="4">Suspenso</option>
                <option value="5">Terror</option>
                <option value="6">Policial</option>
                <option value="7">Documental</option>
                <option value="8">Romantico</option>
            </select>
        </div>
        @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.duracion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.duracion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.director, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.director, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.director, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sinopsis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.sinopsis, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sinopsis, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lanzamiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lanzamiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lanzamiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var imagen = Model.imagen;
            }
            <div style="width: 300px; height: 300px; overflow: hidden;">
                <div style="width: 100%;height: 100%;background-size: cover;background-image: url(data:image/jpeg;base64,@imagen);
                        "></div>
            </div>
            <input type="file" id="imagenBase64" name="avatar" accept=".someext,image/*" onchange="OnChangeEvent(this)">

            @Html.HiddenFor(model => model.imagen, new { htmlAttributes = new { @class = "form-control", @id = "imagenModel" } });
            @Html.ValidationMessageFor(model => model.imagen)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.categoria, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
